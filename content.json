{"meta":{"title":"Carvenski Lab","subtitle":"blog","description":"blog","author":"carvenski","url":"https://carvenski.github.io","root":"/"},"pages":[{"title":"Categories","date":"2025-03-22T03:01:48.835Z","updated":"2025-03-22T03:01:48.835Z","comments":true,"path":"categories/index.html","permalink":"https://carvenski.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2025-03-22T03:01:48.848Z","updated":"2025-03-22T03:01:48.835Z","comments":true,"path":"tags/index.html","permalink":"https://carvenski.github.io/tags/index.html","excerpt":"","text":""},{"title":"About","date":"2025-03-23T13:02:15.445Z","updated":"2025-03-23T13:02:15.445Z","comments":true,"path":"about/index.html","permalink":"https://carvenski.github.io/about/index.html","excerpt":"","text":"This is carvenski, a software engineer in Shanghai.China."}],"posts":[{"title":"Embedded Hardware Engineer","slug":"Embedded Hardware Engineer/Embedded Hardware Engineer","date":"2025-03-24T13:07:09.951Z","updated":"2025-03-24T13:09:11.496Z","comments":true,"path":"2025/03/24/Embedded Hardware Engineer/Embedded Hardware Engineer/","link":"","permalink":"https://carvenski.github.io/2025/03/24/Embedded%20Hardware%20Engineer/Embedded%20Hardware%20Engineer/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859从软件开发转向嵌入式开发，程序员需要掌握一些特定的技术和知识。 嵌入式开发涉及的软件和硬件知识比传统的软件开发要多，因此学习的内容也会更广泛。 以下是程序员转向嵌入式开发时，常见的需要掌握的技术知识： 1. 嵌入式编程语言C语言：C语言是嵌入式开发的核心语言之一。由于嵌入式系统通常对硬件性能要求高，需要直接操作硬件，因此C语言的高效性和对硬件的接近性使其成为嵌入式编程的主流语言。C++：部分嵌入式系统也使用C++，尤其是当系统需求比较复杂，面向对象的设计能带来更好的可维护性时。汇编语言：尽管现在大部分嵌入式系统不需要直接用汇编编程，但了解基础的汇编语言对于调试底层硬件、优化程序性能以及理解硬件架构有很大帮助。2. 嵌入式操作系统RTOS（实时操作系统）：嵌入式系统通常需要实时响应外部事件，因此需要使用实时操作系统（RTOS）。常见的RTOS包括FreeRTOS、uC/OS-II、VxWorks、ThreadX等。了解RTOS的基本概念、任务调度、信号量、队列、内存管理等是非常重要的。裸机编程（Bare-metal programming）：有些嵌入式系统不使用操作系统，而是直接在硬件上运行程序。这种情况下，程序员需要编写“裸机”代码，直接控制硬件资源。3. 硬件基础知识数字电路与模拟电路基础：了解基本的电路理论，特别是数字电路（如逻辑门、触发器、时钟、计数器等）和模拟电路（如放大器、滤波器等）的基本知识。微控制器（MCU）和微处理器（MPU）：了解常见的嵌入式微控制器（如STM32、AVR、PIC、ARM等）的架构和工作原理。学习如何配置和使用这些微控制器的外设，如GPIO、定时器、串口、I2C、SPI等。嵌入式硬件接口：需要掌握与硬件通信的常见接口协议，比如I2C、SPI、UART等，以及如何通过编程与硬件进行交互。4. 硬件调试和开发工具调试工具：了解如何使用调试工具，如JTAG、SWD等，用于调试嵌入式硬件。掌握使用逻辑分析仪、示波器等硬件调试设备，帮助进行低层次的调试和验证。编译器和IDE：学习如何使用嵌入式开发所需的编译器和集成开发环境（IDE）。常用的编译器包括GCC、Keil、IAR等，而常见的IDE有STM32CubeIDE、Atmel Studio、Eclipse等。5. 硬件编程和外设驱动外设驱动编写：嵌入式系统需要与各种外设进行交互（如传感器、LCD显示器、外部存储器等）。学习如何编写驱动程序，以使外设与微控制器或微处理器正确地通信。硬件中断处理：嵌入式系统通常会利用硬件中断来响应实时事件。了解中断的概念以及如何在程序中正确地使用和处理中断。6. 通信协议串行通信协议：在嵌入式系统中，串行通信（如UART、RS232等）是非常常见的，用于系统间数据传输。掌握这些协议的使用是必须的。网络协议：对于一些需要联网的嵌入式系统，了解基本的网络协议（如TCP/IP、UDP、HTTP等）和如何在嵌入式设备上实现网络通信是非常重要的。7. 电源管理和低功耗设计低功耗设计：嵌入式系统在许多应用中需要考虑低功耗运行，特别是电池供电的嵌入式设备。了解如何进行功耗优化，选择合适的睡眠模式、低功耗芯片等，是嵌入式开发的一个关键方面。8. 版本控制和团队协作工具Git：即使是嵌入式开发，使用版本控制工具（如Git）也是非常重要的，尤其是在团队合作开发中。CMake：了解如何使用CMake等构建工具来管理嵌入式项目的编译过程。9. 测试与验证单元测试：虽然嵌入式系统的测试比较困难，但了解如何编写单元测试代码以及如何在嵌入式环境下进行测试是非常重要的。系统级验证：掌握系统级的验证方法，包括硬件与软件的集成验证、性能测试等。总结从软件开发转到嵌入式开发需要一个全面的知识转型，涉及到硬件、操作系统、低层编程等多个方面。除了学习嵌入式开发的基础技术，最重要的是多进行实践，尤其是与硬件相关的开发，因为嵌入式开发不仅要理解代码，还要能够与硬件平台进行有效的交互和调试。如果你已经有较强的软件开发基础，那么转向嵌入式开发会更加顺利，重点是加强对硬件的理解和与硬件交互的能力。","categories":[{"name":"Embedded Hardware Engineer","slug":"Embedded-Hardware-Engineer","permalink":"https://carvenski.github.io/categories/Embedded-Hardware-Engineer/"}],"tags":[]},{"title":"FreeRTOS intro","slug":"Embedded Hardware Engineer/FreeRTOS/FreeRTOS intro","date":"2025-03-24T12:29:13.169Z","updated":"2025-03-24T12:32:07.619Z","comments":true,"path":"2025/03/24/Embedded Hardware Engineer/FreeRTOS/FreeRTOS intro/","link":"","permalink":"https://carvenski.github.io/2025/03/24/Embedded%20Hardware%20Engineer/FreeRTOS/FreeRTOS%20intro/","excerpt":"","text":"what is FreeRTOS ?freertos Real-time operating system for microcontrollers and small microprocessors 12345FreeRTOS is a market-leading embedded system RTOS supporting 40+ processor architectures with a small memory footprint, fast execution times, and cutting-edge RTOS features and libraries including Symmetric Multiprocessing (SMP), a thread-safe TCP stack with IPv6 support, and seamless integration with cloud services. It’s open-source and actively supported and maintained.","categories":[{"name":"Embedded Hardware Engineer","slug":"Embedded-Hardware-Engineer","permalink":"https://carvenski.github.io/categories/Embedded-Hardware-Engineer/"},{"name":"FreeRTOS","slug":"Embedded-Hardware-Engineer/FreeRTOS","permalink":"https://carvenski.github.io/categories/Embedded-Hardware-Engineer/FreeRTOS/"}],"tags":[]},{"title":"python intro","slug":"Software Engineer/python/python intro","date":"2025-03-22T04:38:16.341Z","updated":"2025-03-22T04:40:41.339Z","comments":true,"path":"2025/03/22/Software Engineer/python/python intro/","link":"","permalink":"https://carvenski.github.io/2025/03/22/Software%20Engineer/python/python%20intro/","excerpt":"","text":"hello world1print(&quot;Hello World&quot;) var123456i = 1j = 0if i: print(i)if j: print(j)","categories":[{"name":"Software Engineer","slug":"Software-Engineer","permalink":"https://carvenski.github.io/categories/Software-Engineer/"},{"name":"python","slug":"Software-Engineer/python","permalink":"https://carvenski.github.io/categories/Software-Engineer/python/"}],"tags":[]},{"title":"hexo command","slug":"Software Engineer/hexo/hexo command","date":"2025-03-22T02:59:39.491Z","updated":"2025-03-24T12:35:09.770Z","comments":true,"path":"2025/03/22/Software Engineer/hexo/hexo command/","link":"","permalink":"https://carvenski.github.io/2025/03/22/Software%20Engineer/hexo/hexo%20command/","excerpt":"","text":"Welcome to Hexo! This is your very first post.Check documentation for more info.If you get any problems when using Hexo, you can find the answer in troubleshootingor you can ask me on GitHub.More info: Deployment use hexo1234$ hexo n &quot;New Post&quot; # new$ hexo g # generate$ hexo s # server$ hexo d # deploy","categories":[{"name":"Software Engineer","slug":"Software-Engineer","permalink":"https://carvenski.github.io/categories/Software-Engineer/"},{"name":"hexo","slug":"Software-Engineer/hexo","permalink":"https://carvenski.github.io/categories/Software-Engineer/hexo/"}],"tags":[]}],"categories":[{"name":"Embedded Hardware Engineer","slug":"Embedded-Hardware-Engineer","permalink":"https://carvenski.github.io/categories/Embedded-Hardware-Engineer/"},{"name":"FreeRTOS","slug":"Embedded-Hardware-Engineer/FreeRTOS","permalink":"https://carvenski.github.io/categories/Embedded-Hardware-Engineer/FreeRTOS/"},{"name":"Software Engineer","slug":"Software-Engineer","permalink":"https://carvenski.github.io/categories/Software-Engineer/"},{"name":"python","slug":"Software-Engineer/python","permalink":"https://carvenski.github.io/categories/Software-Engineer/python/"},{"name":"hexo","slug":"Software-Engineer/hexo","permalink":"https://carvenski.github.io/categories/Software-Engineer/hexo/"}],"tags":[]}